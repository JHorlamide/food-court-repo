import { Knex } from "knex";

export interface Order {
  id: number;
  user_id: string;
  completed: boolean;
  cancelled: boolean;
  kitchen_cancelled: boolean;
  kitchen_accepted: boolean;
  kitchen_dispatched: boolean;
  kitchen_dispatched_time: string;
  completed_time: string;
  rider_id: string;
  kitchen_prepared: boolean;
  rider_assigned: boolean;
  paid: boolean;
  order_code: string;
  order_change: string;
  calculated_order_id: string;
  created_at: string;
  updated_at: string;
  kitchen_verified_time: string;
  kitchen_completed_time: string;
  shop_accepted: boolean;
  shop_prepared: boolean;
  no_of_mealbags_delivered: string;
  no_of_drinks_delivered: string;
  rider_started_time: string;
  rider_started: boolean;
  rider_arrived_time: string;
  rider_arrived: boolean;
  is_failed_trip: boolean;
  failed_trip_details: string;
  box_number: string;
  shelf_id: string;
  scheduled: boolean;
  confirmed_by_id: string;
  completed_by_id: string;
  scheduled_delivery_date: string;
  scheduled_delivery_time: string;
  is_hidden: boolean;
}

export const createOrderTable = async (knex: Knex): Promise<void> => {
  await knex.schema.createTable("order", (table) => {
    table.string("id").primary();
    table.string("user_id");
    table.boolean("completed");
    table.boolean("cancelled");
    table.boolean("kitchen_cancelled");
    table.boolean("kitchen_accepted");
    table.boolean("kitchen_dispatched");
    table.timestamp("kitchen_dispatch_time");
    table.timestamp("completed_time");
    table.string("ride_id");
    table.boolean("kitchen_prepared");
    table.boolean("ride_assigned");
    table.boolean("paid");
    table.string("order_code");
    table.boolean("order_change");
    table.string("calculated_order_id");
    table.timestamp("created_at");
    table.timestamp("updated_at");
    table.timestamp("kitchen_verified_time");
    table.timestamp("kitchen_completed_time");
    table.boolean("shop_accepted");
    table.boolean("shop_prepared");
    table.string("no_of_mealbags_delivered");
    table.string("no_of_drinks_delivered");
    table.timestamp("rider_started_time");
    table.boolean("rider_started");
    table.timestamp("rider_arrived_time");
    table.boolean("rider_arrived_time");
    table.boolean("rider_arrived");
    table.boolean("is_failed_tripe");
    table.string("failed_trip_details");
    table.string("box_number");
    table.string("shelf_id");
    table.boolean("scheduled");
    table.bigInteger("confirm_by_id");
    table.bigInteger("completed_by_id");
    table.timestamp("scheduled_delivery_date");
    table.timestamp("scheduled_delivery_time");
    table.boolean("is_hidden");
  });
};
